# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
name: Image / Release

on: # yamllint disable-line rule:truthy
  push:
    branches:
    - main

    paths-ignore:
    - README.md

  schedule:
  - cron: '0 0 * * *'

  # Allow manually triggered workflows by maintainers without any parameters to
  # trigger a proactive rebuild (e.g. when a new package lands)
  workflow_dispatch: {}

# Don't run multiple releases concurrently.
concurrency: release

jobs:
  build:
    name: Release OCI image
    runs-on: ubuntu-latest

    outputs:
      image-refs: ${{ steps.emit-refs.outputs.image-refs }}

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
    - uses: actions/checkout@v3

    - uses: chainguard-dev/actions/setup-melange@main
    - run: |
        echo "$SIGNING_KEY" >${{ github.workspace }}/melange.rsa
        echo "$SIGNING_KEY_PUB" >${{ github.workspace }}/melange.rsa.pub
      env:
        SIGNING_KEY: "${{ secrets.MELANGE_SIGNING_KEY }}"
        SIGNING_KEY_PUB: "${{ secrets.MELANGE_SIGNING_KEY_PUB }}"

    - name: Dependencies
      run: ./cicd/deps.sh

    - name: Strip binaries
      run: |
        sudo apt-get update -q
        sudo apt-get install -qy binutils-aarch64-linux-gnu
        strip *-amd64
        aarch64-linux-gnu-strip *-arm64

    - uses: chainguard-dev/actions/melange-build-pkg@main
      with:
        config: cicd/melange.yaml
        archs: x86_64,aarch64
        sign-with-key: true
        signing-key-path: ${{ github.workspace }}/melange.rsa
        keyring-append: ${{ github.workspace }}/melange.rsa.pub
        update-index: true

    - uses: chainguard-images/actions/apko-build@main
      with:
        config: cicd/apko.yaml
        tag: portefaix-distroless-cicd-test
        keyring-append: melange.rsa.pub
        archs: x86_64

    - name: load image for testing
      run: docker load -i output.tar

    - name: run structure tests
      uses: plexsystems/container-structure-test-action@v0.2.0
      with:
        image: portefaix-distroless-cicd-test
        config: cicd/tests.yaml

    - uses: chainguard-images/actions/apko-publish@main
      id: apko
      with:
        config: apko.yaml
        tag: ghcr.io/${{ github.repository }}:latest
        image_refs: apko.images
        keyring-append: melange.rsa.pub
        source-date-epoch: '0'
        archs: x86_64,aarch64
        sbom-formats: CycloneDX,SPDX

  scan:
    name: Scan images
    needs: build
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      packages: write
      contents: read

    strategy:
      matrix:
        ref: ${{ fromJson(needs.build.outputs.image-refs) }}
    steps:
    - run: |
        echo ${{ matrix.ref }}

    - uses: chainguard-images/actions/vul-scans@main
      id: scans
      with:
        registry: ghcr.io
        image: ${{ matrix.ref }}
        RUN_SNYK: "false"
        RUN_GRYPE: "false"
        DOCKER_LOGIN: 'true'

    - name: Image Vulnerability scan output
      shell: bash
      env:
        SNYK_COUNT: ${{ steps.scans.outputs.SNYK_COUNT }}
        GRYPE_COUNT: ${{ steps.scans.outputs.GRYPE_COUNT }}
        TRIVY_COUNT: ${{ steps.scans.outputs.TRIVY_COUNT }}
      run: |
        echo "Image Vulnerability scan output" >> $GITHUB_STEP_SUMMARY
        echo "Image ID: ${{ matrix.ref }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Snyk Count: $SNYK_COUNT" >> $GITHUB_STEP_SUMMARY
        echo "Grype Count: $GRYPE_COUNT" >> $GITHUB_STEP_SUMMARY
        echo "Trivy Count: $TRIVY_COUNT" >> $GITHUB_STEP_SUMMARY
